//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/Users/Adina/Desktop/LFC/Compilator/Compilator/Compilator/MiniLang.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="MiniLangParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IMiniLangVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] MiniLangParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] MiniLangParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaration([NotNull] MiniLangParser.DeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] MiniLangParser.AssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.incrementDecrement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIncrementDecrement([NotNull] MiniLangParser.IncrementDecrementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] MiniLangParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] MiniLangParser.ForStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] MiniLangParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MulExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulExpr([NotNull] MiniLangParser.MulExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AndExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndExpr([NotNull] MiniLangParser.AndExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StringExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringExpr([NotNull] MiniLangParser.StringExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>EqualExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualExpr([NotNull] MiniLangParser.EqualExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>GreaterThanExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGreaterThanExpr([NotNull] MiniLangParser.GreaterThanExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PreDecrementExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreDecrementExpr([NotNull] MiniLangParser.PreDecrementExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SubExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubExpr([NotNull] MiniLangParser.SubExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>GreaterEqualExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGreaterEqualExpr([NotNull] MiniLangParser.GreaterEqualExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AddExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddExpr([NotNull] MiniLangParser.AddExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NotEqualExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotEqualExpr([NotNull] MiniLangParser.NotEqualExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PostIncrementExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostIncrementExpr([NotNull] MiniLangParser.PostIncrementExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OrExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrExpr([NotNull] MiniLangParser.OrExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AssignExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignExpr([NotNull] MiniLangParser.AssignExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LessEqualExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLessEqualExpr([NotNull] MiniLangParser.LessEqualExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PreIncrementExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreIncrementExpr([NotNull] MiniLangParser.PreIncrementExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DivExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDivExpr([NotNull] MiniLangParser.DivExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PostDecrementExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostDecrementExpr([NotNull] MiniLangParser.PostDecrementExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NumberExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumberExpr([NotNull] MiniLangParser.NumberExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IdentifierExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierExpr([NotNull] MiniLangParser.IdentifierExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NotExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExpr([NotNull] MiniLangParser.NotExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ModExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitModExpr([NotNull] MiniLangParser.ModExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ParenExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenExpr([NotNull] MiniLangParser.ParenExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LessThanExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLessThanExpr([NotNull] MiniLangParser.LessThanExprContext context);
}
